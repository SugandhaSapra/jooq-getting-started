/*
 * This file is generated by jOOQ.
*/
package com.jooq.entities.generated.tables.records;


import com.jooq.entities.generated.tables.Comments;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentsRecord extends UpdatableRecordImpl<CommentsRecord> implements Record4<Long, String, Timestamp, byte[]> {

    private static final long serialVersionUID = -778681670;

    /**
     * Setter for <code>PUBLIC.COMMENTS.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.COMMENTS.BODY</code>.
     */
    public void setBody(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.BODY</code>.
     */
    public String getBody() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.COMMENTS.CREATEDAT</code>.
     */
    public void setCreatedat(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.CREATEDAT</code>.
     */
    public Timestamp getCreatedat() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>PUBLIC.COMMENTS.ARTICLE_ID</code>.
     */
    public void setArticleId(byte... value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.COMMENTS.ARTICLE_ID</code>.
     */
    public byte[] getArticleId() {
        return (byte[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Timestamp, byte[]> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, Timestamp, byte[]> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Comments.COMMENTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Comments.COMMENTS.BODY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Comments.COMMENTS.CREATEDAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field4() {
        return Comments.COMMENTS.ARTICLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getBody();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component4() {
        return getArticleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBody();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreatedat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value4() {
        return getArticleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentsRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentsRecord value2(String value) {
        setBody(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentsRecord value3(Timestamp value) {
        setCreatedat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentsRecord value4(byte... value) {
        setArticleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentsRecord values(Long value1, String value2, Timestamp value3, byte[] value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentsRecord
     */
    public CommentsRecord() {
        super(Comments.COMMENTS);
    }

    /**
     * Create a detached, initialised CommentsRecord
     */
    public CommentsRecord(Long id, String body, Timestamp createdat, byte[] articleId) {
        super(Comments.COMMENTS);

        set(0, id);
        set(1, body);
        set(2, createdat);
        set(3, articleId);
    }
}
