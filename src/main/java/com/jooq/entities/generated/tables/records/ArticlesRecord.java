/*
 * This file is generated by jOOQ.
*/
package com.jooq.entities.generated.tables.records;


import com.jooq.entities.generated.tables.Articles;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticlesRecord extends UpdatableRecordImpl<ArticlesRecord> implements Record4<byte[], String, String, String> {

    private static final long serialVersionUID = 691419051;

    /**
     * Setter for <code>PUBLIC.ARTICLES.ID</code>.
     */
    public void setId(byte... value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ARTICLES.ID</code>.
     */
    public byte[] getId() {
        return (byte[]) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ARTICLES.BODY</code>.
     */
    public void setBody(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ARTICLES.BODY</code>.
     */
    public String getBody() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ARTICLES.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.ARTICLES.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ARTICLES.TITLE</code>.
     */
    public void setTitle(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.ARTICLES.TITLE</code>.
     */
    public String getTitle() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<byte[]> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<byte[], String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<byte[], String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field1() {
        return Articles.ARTICLES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Articles.ARTICLES.BODY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Articles.ARTICLES.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Articles.ARTICLES.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getBody();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBody();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticlesRecord value1(byte... value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticlesRecord value2(String value) {
        setBody(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticlesRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticlesRecord value4(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ArticlesRecord values(byte[] value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArticlesRecord
     */
    public ArticlesRecord() {
        super(Articles.ARTICLES);
    }

    /**
     * Create a detached, initialised ArticlesRecord
     */
    public ArticlesRecord(byte[] id, String body, String description, String title) {
        super(Articles.ARTICLES);

        set(0, id);
        set(1, body);
        set(2, description);
        set(3, title);
    }
}
